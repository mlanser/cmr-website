# Generated by Django 5.0.6 on 2024-07-09 20:18

import django.db.models.deletion
import phonenumber_field.modelfields
import uuid
import wagtail.fields
import wagtail.models
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('wagtailcore', '0093_uploadedfile'),
        ('wagtailimages', '0026_delete_uploadedimage'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactSettings',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'email_cmr',
                    models.EmailField(
                        blank=True,
                        help_text='Email address for CMR',
                        max_length=254,
                        verbose_name='CMR Email',
                    ),
                ),
                (
                    'email_nrhs',
                    models.EmailField(
                        blank=True,
                        help_text='Email address for NRHS',
                        max_length=254,
                        verbose_name='NRHS Email',
                    ),
                ),
                (
                    'phone_cmr',
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        help_text='Phone number for CMR',
                        max_length=128,
                        region=None,
                        verbose_name='CMR Phone',
                    ),
                ),
                (
                    'phone_nrhs',
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        help_text='Phone number for NRHS',
                        max_length=128,
                        region=None,
                        verbose_name='NRHS Phone',
                    ),
                ),
                (
                    'address_cmr',
                    models.TextField(
                        blank=True,
                        help_text='Mailing address for CMR.',
                        verbose_name='CMR Mailing Address',
                    ),
                ),
                (
                    'address_nrhs',
                    models.TextField(
                        blank=True,
                        help_text='Mailing address for NRHS.',
                        verbose_name='NRHS Mailing Address',
                    ),
                ),
                (
                    'youtube',
                    models.CharField(
                        blank=True,
                        help_text='Youtube channel name without @ symbol. Example: cmr_railway.',
                        max_length=30,
                        verbose_name='Youtube',
                    ),
                ),
                (
                    'instagram',
                    models.CharField(
                        blank=True,
                        help_text='Instagram username without @ symbol. Example: cmr_railway.',
                        max_length=30,
                        verbose_name='Instagram',
                    ),
                ),
                (
                    'visit_addr',
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text='Visiting address for CMR layout and NRHS exhibits.',
                        verbose_name='Visiting Address',
                    ),
                ),
                (
                    'visit_hours_MON',
                    models.CharField(
                        blank=True,
                        help_text='Visiting hours on Monday. Leave blank if not open to public. Example: 10A - 5P.',
                        max_length=10,
                        verbose_name='MON',
                    ),
                ),
                (
                    'visit_hours_TUE',
                    models.CharField(
                        blank=True,
                        help_text='Visiting hours on Tuesday. Leave blank if not open to public. Example: 10A - 5P.',
                        max_length=10,
                        verbose_name='TUE',
                    ),
                ),
                (
                    'visit_hours_WED',
                    models.CharField(
                        blank=True,
                        help_text='Visiting hours on Wednesday. Leave blank if not open to public. Example: 10A - 5P.',
                        max_length=10,
                        verbose_name='WED',
                    ),
                ),
                (
                    'visit_hours_THU',
                    models.CharField(
                        blank=True,
                        help_text='Visiting hours on Thursday.Leave blank if not open to public. Example: 10A - 5P.',
                        max_length=10,
                        verbose_name='THU',
                    ),
                ),
                (
                    'visit_hours_FRI',
                    models.CharField(
                        blank=True,
                        help_text='Visiting hours on Friday. Leave blank if not open to public. Example: 10A - 5P.',
                        max_length=10,
                        verbose_name='FRI',
                    ),
                ),
                (
                    'visit_hours_SAT',
                    models.CharField(
                        blank=True,
                        help_text='Visiting hours on Saturday. Leave blank if not open to public. Example: 10A - 5P.',
                        max_length=10,
                        verbose_name='SAT',
                    ),
                ),
                (
                    'visit_hours_SUN',
                    models.CharField(
                        blank=True,
                        help_text='Visiting hours on Sunday. Leave blank if not open to public. Example: 10A - 5P.',
                        max_length=10,
                        verbose_name='SUN',
                    ),
                ),
                (
                    'visit_hours_holidays',
                    models.CharField(
                        blank=True,
                        help_text="Exceptions for holidays. Example: 'Holiday hours may differ.'",
                        max_length=30,
                        verbose_name='Holidays',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                (
                    'author_image',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to='wagtailimages.image',
                    ),
                ),
            ],
            options={
                'verbose_name_plural': 'Authors',
            },
        ),
        migrations.CreateModel(
            name='CopyrightText',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'translation_key',
                    models.UUIDField(default=uuid.uuid4, editable=False),
                ),
                (
                    'live',
                    models.BooleanField(default=True, editable=False, verbose_name='live'),
                ),
                (
                    'has_unpublished_changes',
                    models.BooleanField(
                        default=False,
                        editable=False,
                        verbose_name='has unpublished changes',
                    ),
                ),
                (
                    'first_published_at',
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name='first published at',
                    ),
                ),
                (
                    'last_published_at',
                    models.DateTimeField(
                        editable=False, null=True, verbose_name='last published at'
                    ),
                ),
                (
                    'go_live_at',
                    models.DateTimeField(blank=True, null=True, verbose_name='go live date/time'),
                ),
                (
                    'expire_at',
                    models.DateTimeField(blank=True, null=True, verbose_name='expiry date/time'),
                ),
                (
                    'expired',
                    models.BooleanField(default=False, editable=False, verbose_name='expired'),
                ),
                ('body', wagtail.fields.RichTextField()),
                (
                    'latest_revision',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to='wagtailcore.revision',
                        verbose_name='latest revision',
                    ),
                ),
                (
                    'live_revision',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to='wagtailcore.revision',
                        verbose_name='live revision',
                    ),
                ),
                (
                    'locale',
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='+',
                        to='wagtailcore.locale',
                    ),
                ),
            ],
            options={
                'verbose_name_plural': 'Copyright Text',
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
            bases=(wagtail.models.PreviewableMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FooterText',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'translation_key',
                    models.UUIDField(default=uuid.uuid4, editable=False),
                ),
                (
                    'live',
                    models.BooleanField(default=True, editable=False, verbose_name='live'),
                ),
                (
                    'has_unpublished_changes',
                    models.BooleanField(
                        default=False,
                        editable=False,
                        verbose_name='has unpublished changes',
                    ),
                ),
                (
                    'first_published_at',
                    models.DateTimeField(
                        blank=True,
                        db_index=True,
                        null=True,
                        verbose_name='first published at',
                    ),
                ),
                (
                    'last_published_at',
                    models.DateTimeField(
                        editable=False, null=True, verbose_name='last published at'
                    ),
                ),
                (
                    'go_live_at',
                    models.DateTimeField(blank=True, null=True, verbose_name='go live date/time'),
                ),
                (
                    'expire_at',
                    models.DateTimeField(blank=True, null=True, verbose_name='expiry date/time'),
                ),
                (
                    'expired',
                    models.BooleanField(default=False, editable=False, verbose_name='expired'),
                ),
                ('body', wagtail.fields.RichTextField()),
                (
                    'latest_revision',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to='wagtailcore.revision',
                        verbose_name='latest revision',
                    ),
                ),
                (
                    'live_revision',
                    models.ForeignKey(
                        blank=True,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to='wagtailcore.revision',
                        verbose_name='live revision',
                    ),
                ),
                (
                    'locale',
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='+',
                        to='wagtailcore.locale',
                    ),
                ),
            ],
            options={
                'verbose_name_plural': 'Footer Text',
                'abstract': False,
                'unique_together': {('translation_key', 'locale')},
            },
            bases=(wagtail.models.PreviewableMixin, models.Model),
        ),
    ]
