# Generated by Django 5.0.6 on 2024-08-01 23:21

import django.core.validators
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        (
            'taggit',
            '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx',
        ),
        ('wagtailcore', '0093_uploadedfile'),
        ('wagtailimages', '0026_delete_uploadedimage'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventPage',
            fields=[
                (
                    'page_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='wagtailcore.page',
                    ),
                ),
                ('date', models.DateField(verbose_name='Post date')),
                ('intro', models.CharField(max_length=255)),
                (
                    'body',
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text='Content for event page using RichText format.',
                    ),
                ),
                ('event_date', models.DateField(verbose_name='Event date')),
                ('event_start_time', models.TimeField(verbose_name='Event start time')),
                ('event_end_time', models.TimeField(verbose_name='Event end time')),
                (
                    'public',
                    models.BooleanField(
                        default=False,
                        help_text='Is this a public event?',
                        verbose_name='Public event',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SectionPage',
            fields=[
                (
                    'page_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='wagtailcore.page',
                    ),
                ),
                ('date', models.DateField(verbose_name='Post date')),
                ('intro', models.CharField(max_length=255)),
                (
                    'body',
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text='Content for section page using RichText format.',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SectionSubMain',
            fields=[
                (
                    'page_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='wagtailcore.page',
                    ),
                ),
                (
                    'max_recent',
                    models.IntegerField(
                        default=6,
                        help_text='Max recent items to show on sub-section landing page',
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                        verbose_name='Max recent',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='EventPageGalleryImage',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'sort_order',
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    'caption',
                    models.CharField(
                        blank=True,
                        help_text='Text is used as ALT text for the image.',
                        max_length=255,
                        verbose_name='Image caption',
                    ),
                ),
                (
                    'credit_text',
                    models.CharField(
                        blank=True,
                        help_text='Image credits display below image.',
                        max_length=255,
                        verbose_name='Image credit',
                    ),
                ),
                (
                    'credit_url',
                    models.URLField(
                        blank=True,
                        help_text='URL for image credits.',
                        verbose_name='Credit URL',
                    ),
                ),
                (
                    'image',
                    models.ForeignKey(
                        help_text='Use image ratio 3:2 and max size 1200 x 800 px.',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='+',
                        to='wagtailimages.image',
                        verbose_name='Gallery image',
                    ),
                ),
                (
                    'page',
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='gallery_images',
                        to='sections.eventpage',
                    ),
                ),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventPageRelatedLink',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'sort_order',
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField()),
                (
                    'page',
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='related_links',
                        to='sections.eventpage',
                    ),
                ),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventPageTag',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'content_object',
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='tagged_items',
                        to='sections.eventpage',
                    ),
                ),
                (
                    'tag',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='%(app_label)s_%(class)s_items',
                        to='taggit.tag',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='eventpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(
                blank=True,
                help_text='A comma-separated list of tags.',
                through='sections.EventPageTag',
                to='taggit.Tag',
                verbose_name='Tags',
            ),
        ),
        migrations.CreateModel(
            name='SectionMain',
            fields=[
                (
                    'page_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='wagtailcore.page',
                    ),
                ),
                (
                    'about',
                    wagtail.fields.RichTextField(
                        blank=True, help_text='Text to describe this section'
                    ),
                ),
                ('about_title', models.CharField(blank=True, max_length=255)),
                (
                    'show_happening',
                    models.BooleanField(
                        default=False,
                        help_text='Show upcoming events, shows, etc. on landing page?',
                        verbose_name='Show events',
                    ),
                ),
                (
                    'max_recent',
                    models.IntegerField(
                        default=6,
                        help_text='Max recent items to show on landing page',
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                        verbose_name='Max recent',
                    ),
                ),
                (
                    'show_contact_info',
                    models.BooleanField(
                        default=False,
                        editable=False,
                        help_text='Show content form and social media links on landing page?',
                        verbose_name='Show contact info',
                    ),
                ),
                (
                    'about_image',
                    models.ForeignKey(
                        blank=True,
                        help_text='Landscape mode only; horizontal width between 1000px and 3000px.',
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to='wagtailimages.image',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='SectionMainBannerImage',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'sort_order',
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    'caption',
                    models.CharField(
                        blank=True,
                        help_text='Optional text to display on the banner image',
                        max_length=255,
                        verbose_name='Banner text',
                    ),
                ),
                (
                    'credit_text',
                    models.CharField(
                        blank=True,
                        help_text='Image credits display below image.',
                        max_length=255,
                        verbose_name='Image credit',
                    ),
                ),
                (
                    'credit_url',
                    models.URLField(
                        blank=True,
                        help_text='URL for image credits.',
                        verbose_name='Credit URL',
                    ),
                ),
                (
                    'image',
                    models.ForeignKey(
                        blank=True,
                        help_text='Use image ratio 20:9 and max size 2000 x 900 px',
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to='wagtailimages.image',
                        verbose_name='Banner image',
                    ),
                ),
                (
                    'page',
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='banner_images',
                        to='sections.sectionmain',
                    ),
                ),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SectionPageGalleryImage',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'sort_order',
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    'caption',
                    models.CharField(
                        blank=True,
                        help_text='Text is used as ALT text for the image.',
                        max_length=255,
                        verbose_name='Image caption',
                    ),
                ),
                (
                    'credit_text',
                    models.CharField(
                        blank=True,
                        help_text='Image credits display below image.',
                        max_length=255,
                        verbose_name='Image credit',
                    ),
                ),
                (
                    'credit_url',
                    models.URLField(
                        blank=True,
                        help_text='URL for image credits.',
                        verbose_name='Credit URL',
                    ),
                ),
                (
                    'image',
                    models.ForeignKey(
                        help_text='Use image ratio 3:2 and max size 1200 x 800 px.',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='+',
                        to='wagtailimages.image',
                        verbose_name='Gallery image',
                    ),
                ),
                (
                    'page',
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='gallery_images',
                        to='sections.sectionpage',
                    ),
                ),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SectionPageRelatedLink',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'sort_order',
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField()),
                (
                    'page',
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='related_links',
                        to='sections.sectionpage',
                    ),
                ),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SectionPageTag',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'content_object',
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='tagged_items',
                        to='sections.sectionpage',
                    ),
                ),
                (
                    'tag',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='%(app_label)s_%(class)s_items',
                        to='taggit.tag',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='sectionpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(
                blank=True,
                help_text='A comma-separated list of tags.',
                through='sections.SectionPageTag',
                to='taggit.Tag',
                verbose_name='Tags',
            ),
        ),
        migrations.CreateModel(
            name='SectionSubMainBannerImage',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'sort_order',
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    'caption',
                    models.CharField(
                        blank=True,
                        help_text='Optional text to display on the banner image',
                        max_length=255,
                        verbose_name='Banner text',
                    ),
                ),
                (
                    'credit_text',
                    models.CharField(
                        blank=True,
                        help_text='Image credits display below image.',
                        max_length=255,
                        verbose_name='Image credit',
                    ),
                ),
                (
                    'credit_url',
                    models.URLField(
                        blank=True,
                        help_text='URL for image credits.',
                        verbose_name='Credit URL',
                    ),
                ),
                (
                    'image',
                    models.ForeignKey(
                        blank=True,
                        help_text='Use image ratio 20:9 and max size 2000 x 900 px',
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='+',
                        to='wagtailimages.image',
                        verbose_name='Banner image',
                    ),
                ),
                (
                    'page',
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='banner_images',
                        to='sections.sectionsubmain',
                    ),
                ),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShowPage',
            fields=[
                (
                    'page_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='wagtailcore.page',
                    ),
                ),
                ('date', models.DateField(verbose_name='Post date')),
                ('intro', models.CharField(max_length=255)),
                (
                    'body',
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text='Content for event page using RichText format.',
                    ),
                ),
                ('show_start_date', models.DateField(verbose_name='Show start date')),
                ('show_end_date', models.DateField(verbose_name='Show end date')),
                ('show_start_time', models.TimeField(verbose_name='Show start time')),
                ('show_end_time', models.TimeField(verbose_name='Show end time')),
                (
                    'public',
                    models.BooleanField(
                        default=True,
                        help_text='Is this a public event?',
                        verbose_name='Public event',
                    ),
                ),
                (
                    'tags',
                    modelcluster.contrib.taggit.ClusterTaggableManager(
                        blank=True,
                        help_text='A comma-separated list of tags.',
                        through='sections.EventPageTag',
                        to='taggit.Tag',
                        verbose_name='Tags',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ShowPageGalleryImage',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'sort_order',
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    'caption',
                    models.CharField(
                        blank=True,
                        help_text='Text is used as ALT text for the image.',
                        max_length=255,
                        verbose_name='Image caption',
                    ),
                ),
                (
                    'credit_text',
                    models.CharField(
                        blank=True,
                        help_text='Image credits display below image.',
                        max_length=255,
                        verbose_name='Image credit',
                    ),
                ),
                (
                    'credit_url',
                    models.URLField(
                        blank=True,
                        help_text='URL for image credits.',
                        verbose_name='Credit URL',
                    ),
                ),
                (
                    'image',
                    models.ForeignKey(
                        help_text='Use image ratio 3:2 and max size 1200 x 800 px.',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='+',
                        to='wagtailimages.image',
                        verbose_name='Gallery image',
                    ),
                ),
                (
                    'page',
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='gallery_images',
                        to='sections.showpage',
                    ),
                ),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShowPageRelatedLink',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'sort_order',
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                ('name', models.CharField(max_length=255)),
                ('url', models.URLField()),
                (
                    'page',
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='related_links',
                        to='sections.showpage',
                    ),
                ),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShowPageTag',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'content_object',
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='tagged_items',
                        to='sections.showpage',
                    ),
                ),
                (
                    'tag',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='%(app_label)s_%(class)s_items',
                        to='taggit.tag',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
